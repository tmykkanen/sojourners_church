---
import { getCollection, getEntry } from "astro:content";
// import { getHumanReadableScriptureRef } from "@src/utils/bibleParser";

import Header from "@components/Header.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import SpotifyAudioEmbed from "@components/SpotifyAudioEmbed.astro";

// Get all sermons, sorted by date
const allSermons = (await getCollection("sermons")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);

// Get latest sermon from all sermons
const latestSermon = allSermons[0];

console.log(latestSermon);

// Get latest sermon entry
// const latestSermonSeries = await getEntry(
//   "series",
//   latestSermon.data.series.id.match(/[a-z0-9-]*.(?=.md$)/)![0]
// );

const latestSermonSeries = await getEntry(latestSermon.data.series);

// Get latest preacher entry
// const latestPreacher = await getEntry(
//   "preachers",
//   latestSermon.data.preacher.id.match(/[a-z0-9-_]*.(?=.md$)/)![0]
// );
const latestPreacher = await getEntry(latestSermon.data.preacher);

// Get all sermon series
const allSeries = (await getCollection("series")).sort(
  (a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf(),
);
---

<BaseLayout>
  <Header />
  <main class="layout-base">
    <h1 class="sr-only">Sermons</h1>

    <div class="mb-8 grid grid-cols-2">
      <div>
        <h2 class="text-2xl uppercase">Latest Sermon</h2>
        <h3 class="text-xl">
          <a href={`/sermons/${latestSermon.id}`} class="link">
            {latestSermon.data.title}
          </a>
        </h3>
        <div class="text-base-content/50 text-sm">
          <p>
            {
              latestSermon.data.date.toLocaleDateString("en-US", {
                month: "long",
                day: "2-digit",
                year: "numeric",
              })
            }
          </p>
          <!-- <p>{latestSermon.data.title}</p> -->
          <p>
            {latestPreacher?.data.name}
          </p>
          <!-- TODO: Redo interaction with Bible Parser -->
          <!-- <p>{getHumanReadableScriptureRef(latestSermon.sermonText)}</p> -->
        </div>
      </div>
      <div>
        <h2 class="text-2xl uppercase">Listen on Spotify</h2>
        <SpotifyAudioEmbed spotifyURL={latestSermon.data.spotifyURL} />
      </div>
    </div>
    <h2 class="text-2xl uppercase">Sermons By Series</h2>
    <div class="flex gap-6">
      {
        allSeries.map(({ data: { imageSquare, title }, id }) => (
          <div class="card bg-base-200 w-48 shadow-sm">
            <a href={`/sermons/series/${id}`}>
              <figure>
                <img src={imageSquare} alt="series image" />
              </figure>
              <div class="card-body">
                <h3 class="card-title text-sm">{title}</h3>
              </div>
            </a>
          </div>
        ))
      }
    </div>

    <!-- <div class="divider"></div>
    <div>
      <label class="input">
        <svg
          class="h-[1em] opacity-50"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
        >
          <g
            stroke-linejoin="round"
            stroke-linecap="round"
            stroke-width="2.5"
            fill="none"
            stroke="currentColor"
          >
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.3-4.3"></path>
          </g>
        </svg>
        <input type="search" class="grow" placeholder="Search" />
        <kbd class="kbd kbd-sm">âŒ˜</kbd>
        <kbd class="kbd kbd-sm">K</kbd>
      </label>
    </div>
    <div class="grid grid-cols-2">
      <div>
        <h2>Sermons By Preacher</h2>
        <select class="select">
          <option disabled selected>Pick a Preacher</option>
          {
            allPreachers.map(({ data: { name } }) => (
              <option>
                {name.first} {name.last}
              </option>
            ))
          }
        </select>
      </div>
      <div>
        <h2>Sermons By Date</h2>
        <select class="select">
          <option disabled selected>Pick a color</option>
          <option>Crimson</option>
          <option>Amber</option>
          <option>Velvet</option>
        </select>
      </div>
    </div> -->
  </main>
</BaseLayout>
