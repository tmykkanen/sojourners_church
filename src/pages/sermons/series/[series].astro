---
import Header from "@components/Header.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection, render } from "astro:content";
import { getHumanReadableScriptureRef } from "@src/utils/bibleParser";

export async function getStaticPaths() {
  const allSeries = await getCollection("sermonSeries");

  return allSeries.map((series) => ({
    params: { series: series.id },
    props: { series },
  }));
}

const { series } = Astro.props;
const { name, image } = series.data;

const allSermons = await getCollection("sermons");

// Sort to most recent
const sermonsInSeries = allSermons
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .filter((sermon) => sermon.data.series === series.id);
---

<BaseLayout>
  <Header />
  <main class="layout-base">
    <img src={image} alt="series image" />
    <h1 class="sr-only">{name}</h1>
    <ul class="flex flex-col gap-10">
      {
        sermonsInSeries.map(
          ({ data: { date, title, preacher, sermonText }, id }) => (
            <li class="flex flex-col">
              {date.toLocaleDateString("en-US", {
                month: "long",
                day: "2-digit",
                year: "numeric",
              })}
              <a href={`/sermons/${id}`} class="text-4xl">
                {title}
              </a>
              {preacher} - {getHumanReadableScriptureRef(sermonText)}
            </li>
          ),
        )
      }
    </ul>
  </main>
</BaseLayout>
